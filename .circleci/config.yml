# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
    slack: circleci/slack@4.12.0
    codecov: codecov/codecov@3.2.4

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
    notify:
        docker:
            - image: cimg/base:stable
        steps:
          - run:
                name: Success
                command: |
                    exit 0
    build:
        parallelism: 4
        working_directory: ~/repo
        # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
        # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
        docker:
            - image: cimg/go:1.19
            - image: cimg/redis:7.0
            - image: cimg/mysql:8.0
              environment:
                  MYSQL_DATABASE: hexagonal
                  MYSQL_USER: user
                  MYSQL_PASSWORD: root
                  MYSQL_ROOT_PASSWORD: root
        # Add steps to the job
        # See: https://circleci.com/docs/2.0/configuration-reference/#steps
        steps:
            - restore_cache:
                  name: Restore Go Mod Cache
                  paths:
                      - "/home/circleci/go/pkg/mod"
                  keys:
                      - go-mod-v4-{{ checksum "go.sum" }}
            - run:
                  name: Go Mod Tidy
                  command: go mod tidy -v
            - save_cache:
                  name: Save Go Mod Cache
                  key: go-mod-v4-{{ checksum "go.sum" }}
                  paths:
                      - "/home/circleci/go/pkg/mod"
            - run:
                  name: Wait MySQL Start
                  command: dockerize -wait tcp://localhost:3306 -timeout 1m
            - run:
                  name: Run Test
                  command: |
                      go test -v -coverprofile=c.out $(go list ./... | circleci tests split --split-by=timings)
                      go tool cover -html=c.out -o coverage.html
                      mv coverage.html /tmp/artifacts
            - store_artifacts:
                  name: Store Test Artifacts
                  path: /tmp/artifacts
#            - codecov/upload:
#                  name: Upload CodeCov
#                  file: {{ coverage_report_filepath }}
            - store_test_results:
                  name: Store Test Results
                  path: test-results

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
    version: 2
    Build: # This is the name of the workflow, feel free to change it to better match your workflow.
        # Inside the workflow, you define the jobs you want to run.
        jobs:
            - build:
                pre-steps:
                    - checkout
                    - run:
                          name: Prepare
                          command: |
                              mkdir -p /tmp/artifacts
                              mkdir -p /home/circleci/go
                              mkdir -p /home/circleci/repo/test-results
                              apt-get install mysql-client
            - notify:
                  requires:
                      - build
                  context: slack-bot-oauth-token
                  post-steps:
                      - slack/notify:
                            event: pass
                            mentions: '@Rancho'
                            template: basic_success_1
                      - slack/notify:
                            event: fail
                            mentions: '@Rancho'
                            template: basic_fail_1
